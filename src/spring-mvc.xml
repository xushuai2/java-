<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:util="http://www.springframework.org/schema/util" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/util  
        http://www.springframework.org/schema/util/spring-util-4.0.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/cache  
        http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd" 
       >
       
    <aop:aspectj-autoproxy expose-proxy="true"/><!-- 要添加本行 -->
    <aop:config proxy-target-class="true"></aop:config>
    <!--启用SpringMVC的注解功能,它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例-->
    <mvc:annotation-driven />
	<context:annotation-config /> 
	<!-- SpringMVC的扫描范围 --> 
    <context:component-scan base-package="demo">
    </context:component-scan>
	
	
	<mvc:default-servlet-handler/>
    <!--   静态文件访问,主要是让DispatcherServlet不拦截以下静态资源 -->
    <mvc:resources mapping="/resources/**" location="/resources/" /> 
    
    <mvc:interceptors>
  		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="demo.Interceptor.LoginAndPermissionInterceptor" >
				<property name="whiteListing"><!-- 不要session也可以访问的url... -->
					<list>
						<value>/user/**</value>
						<value>/index</value>
						<value>/app/**</value>
						<value>/loginUpdatePwd</value>
						<value>/user/changepassword</value><!-- 修改密码 -->
						<value>/user/toLockWin</value><!-- 锁定窗口 -->
						<value>/unlockwin</value><!-- 解除 锁定窗口 -->
						<value>/user/ajLogin</value><!-- 登陆解锁 -->
					</list>
				</property>
			</bean>
		</mvc:interceptor>  
		<!-- <mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<bean class="com.arm.interceptor.ClientLoginInterceptor" /> 
		</mvc:interceptor>  -->
	</mvc:interceptors>
    
    <!-- 国际化部分 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">  
    	<property name="basenames">
   			<list>
    			<value>i18n/messages</value>
   			</list>
  		</property>   
    	<property name="useCodeAsDefaultMessage" value="true"/>
	</bean> 
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" >
    	<property name="defaultLocale" value="zh_CN"></property>
    </bean>
    
    <!-- 控制器异常处理 -->  
    <bean id="exceptionResolver" class="demo.exception.ExceptionHandler"/> 
    
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/view/" />
		<!-- 如果把这个注释，返回的时候需要带上后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
    
    
    <!-- 支持缓存注解 -->  
    <!-- <cache:annotation-driven cache-manager="cacheManager" />  
     缓存  属性  
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">    
        <property name="configLocation"  value="classpath:ehcache.xml"/>   
    </bean>   
    默认是cacheManager  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">    
        <property name="cacheManager"  ref="cacheManagerFactory"/>    
    </bean>    -->
    
    
    <!-- 拦截器配置 -->  
    <!-- <mvc:interceptors>  
      session超时  
      <mvc:interceptor>  
        <mvc:mapping path="/*/*"/>  
        <bean class="demo.Interceptor.SessionTimeoutInterceptor">  
          <property name="allowUrls">  
            <list>  
              如果请求中包含以下路径，则不进行拦截  
              <value>/mongodbtest</value>  
              <value>/index</value>
              <value>/detail</value> 
              <value>/tjdc</value>  
              <value>/login</value> 
            </list>  
          </property>  
        </bean>  
      </mvc:interceptor>  
    </mvc:interceptors>   -->
    
    <import resource="bean.xml"/>
    
   
    
</beans>